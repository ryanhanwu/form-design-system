/*
SCRATCH FILE FOR TEXT CLASES
*/

:root {
  --font-size-display1: 39px;
  --font-size-display2: 31px;
  --font-size-display3: 25px;
  --font-size-big: 20px;
  --font-size-default: 16px;
  --font-size-small: 13px;
  --font-size-tiny: 10px;

  --font-weight--default: 400;
  --font-weight--bold: 700;
}

body {
  font-size: 16px;
}

/**
* TODO: split out weight, size, color as helper classes
* use a different name or section to document
*/

/*---
title: Text scratch
name: textScratch
section: Text Helpers
---
Scratch file/doc for testing out text definitions.

```example:html
<p class="text--display">Display text</p>
<p class="text--pageHead">Page head</p>
<p class="text--sectionHead">Section head</p>
<p class="text--minorHead">Minor head</p>
<p>Body text</p>
<p class="text--data">Data text</p>
<p class="text--tiny">Tiny text</p>
```
*/

.text--display {
  font-size: var(--font-size-display1);
  color: pink; /* some color */
  font-weight: var(--font-weight--default); /* some weight */
  line-height: 1.4; /* some line height; match to size (mabye in dict name) */
}

.text--pageHead {
  font-size: var(--font-size-display2);
  color: pink; /* some color */
  font-weight: var(--font-weight--default); /* some weight */
  line-height: 1.4; /* some line height; match to size (mabye in dict name) */
}

.text--sectionHead {
  font-size: var(--font-size-display3);
  color: pink; /* some color */
  font-weight: var(--font-weight--default); /* some weight */
  line-height: 1.4; /* some line height; match to size (mabye in dict name) */
}

.text--minorHead {
  font-size: var(--font-size-big);
  color: pink; /* some color */
  font-weight: var(--font-weight--default); /* some weight */
  line-height: 1.4; /* some line height; match to size (mabye in dict name) */
}

.text--data {
  font-size: var(--font-size-small);
  color: pink; /* some color */
  font-weight: var(--font-weight--default); /* some weight */
  line-height: 1.4; /* some line height; match to size (mabye in dict name) */
}

.text--caption {
  font-size: var(--font-size-tiny);
  color: pink; /* some color */
  font-weight: var(--font-weight--default); /* some weight */
  line-height: 1.4; /* some line height; match to size (mabye in dict name) */
}


/**
Questions:
- wtf is up with the baseline grid? how does it work? how does that correspond with line heights?
  - does small text need to be different than tiny in line height?
- are the named abstractions ligned with design intention?
- is data different than just small text? in color or line height or weight?
- what color is "default" for text - does it varry based on size/type?
- how does inverted context work? What should secondary text snap to? Should the backgroudn get absorbed into text color?
*/
